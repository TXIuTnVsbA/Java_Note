字符串操作
1) length() 方法
String str1 = "微学苑";
String str2 = "weixueyuan";
System.out.println("The lenght of str1 is " + str1.length());
System.out.println("The lenght of str2 is " + str2.length());

输出结果：
The lenght of str1 is 3
The lenght of str2 is 10
可见，无论是字母、数字，还是汉字，每个字符的长度都是1。

2) charAt() 方法
charAt() 方法的作用是按照索引值获得字符串中的指定字符。Java规定，字符串中第一个字符的索引值是0，第二个字符的索引值是1，依次类推。例如：
String str = "123456789";
System.out.println(str.charAt(0) + "    " + str.charAt(5) + "    " + str.charAt(8));
输出结果：
1    6    9

3) contains() 方法
contains() 方法用来检测字符串是否包含某个子串，例如：
String str = "weixueyuan";
System.out.println(str.contains("yuan"));
输出结果：
true

4) replace() 方法
字符串替换，用来替换字符串中所有指定的子串，例如：
String str1 = "The url of weixueyuan is www.weixueyuan.net!";
String str2 = str1.replace("weixueyuan", "微学苑");
System.out.println(str1);
System.out.println(str2);
输出结果：
The url of weixueyuan is www.weixueyuan.net!
The url of 微学苑 is www.微学苑.net!
注意：replace() 方法不会改变原来的字符串，而是生成一个新的字符串。

5) split() 方法
以指定字符串作为分隔符，对当前字符串进行分割，分割的结果是一个数组，例如：
import java.util.*;
public class Demo {
    public static void main(String[] args){
        String str = "wei_xue_yuan_is_good";
        String strArr[] = str.split("_");
        System.out.println(Arrays.toString(strArr));
    }
}
运行结果：
[wei, xue, yuan, is, good]

以上仅仅列举了几个常用的String对象的方法，更多方法和详细解释请参考API文档。
